# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master", "staging", "development" ]
  pull_request:
    branches: [ "master", "staging", "development" ]

permissions:
  contents: write

env:
  PYTHON_VERSION: "3.9"
  UBUNTU_VERSION: ubuntu-24.04

jobs:
  build:

    runs-on: $UBUNTU_VERSION

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: $PYTHON_VERSION
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  
  test:
    runs-on: $UBUNTU_VERSION
    needs: build

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: $PYTHON_VERSION
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with pytest
        run: |
          pytest

  sast-bandit:
    runs-on: $UBUNTU_VERSION
    needs: [build, test]
    steps:
      - uses: actions/checkout@v4

      - name: Python security check using Bandit
        uses: Joel-hanson/bandit-report-artifacts@V1      
        with:
          python_version: $PYTHON_VERSION
          project_path: todo_project
          ignore_failure: true
  
      - name: Security check report artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Bandit security report
          path: bandit_security_report.txt

  autotag:
    runs-on: $UBUNTU_VERSION
    needs: [build, test, sast-bandit]
    if: github.ref == 'refs/heads/master'

    steps:
    - uses: actions/checkout@v4
    - name: Auto Tag
      uses: Jorricks/action-python-autotagging@1.0.1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        path: todo_project/todo_project/__init__.py
        variable: tag_version
        prefix: v

